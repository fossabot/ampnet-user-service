version: 2.1

executors:
  java-executor:
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

  java-db-executor:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/postgres:11.5-ram
        environment:
          POSTGRES_USER: user_service_test
          POSTGRES_DB: user_service_test
          POSTGRES_PASSWORD: password
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

jobs:
  build:
    executor: java-executor
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - run:
          name: Install dependencies
          command: ./gradlew build -x check
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - persist_to_workspace:
          root: .
          paths:
            - build

  test:
    executor: java-db-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run all tests
          command: ./gradlew test
      - run:
          name: Generate test coverage report
          command: ./gradlew jacocoTestReport
      - run:
          name: Verify test coverage minimum limit
          command: ./gradlew jacocoTestCoverageVerification

  code-quality:
    executor: java-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Kotlin linter
          command: ./gradlew ktlinCheck
      - run:
          name: Run code quality check
          command: ./gradlew detekt

  deploy:
    executor: java-db-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./gradlew build
      - run:
          name: Copy docs to static resources
          command: ./gradlew copyDocs
      - run:
          name: Push new docker image
          command: ./gradlew jib

workflows:
  version: 2.1
  test-deploy:
    jobs:
      - build
      - code-quality:
          requires:
            - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
            - code-quality
          filters:
            branches:
              only: master
