version: 2.1

executors:
  java-executor:
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

  java-db-executor:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/postgres:10.7-ram
        environment:
          POSTGRES_USER: user_service_test
          POSTGRES_DB: user_service_test
          POSTGRES_PASSWORD: password
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

commands:
  gradle-depenencies:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

jobs:
  assemble:
    executor: java-executor
    working_directory: ~/user-service
    steps:
      - checkout
      - gradle-depenencies
      - run: gradle assemble

  test:
    executor: java-db-executor
    working_directory: /tmp/user-service
    steps:
      - run:
          name: Run all tests
          command: gradle test
      - run:
          name: Generate test coverage report
          command: gradle jacocoTestReport
      - run:
          name: Verify test coverage minimum limit
          command: gradle jacocoTestCoverageVerification

  codeQuality:
    executor: java-executor
    working_directory: /tmp/user-service
    steps:
      - run:
          name: Kotlin linter
          command: gradle ktlinCheck
      - run:
          name: Run code quality check
          command: gradle detekt

  deploy:
    executor: java-db-executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "96:2c:54:e3:52:7c:c8:89:e3:0f:58:44:d8:be:71:fb"
      - run: gradle build
      - run:
          name: Copy docs to static resources
          command: gradle copyDocs
      - run:
          name: Push new docker image
          command: gradle jib

workflows:
  version: 2.1
  test-deploy:
    jobs:
      - assemble
      - test:
          requires:
            - assemble
      - codeQuality:
          requires:
            - assemble
      - deploy:
          requires:
            - test
            - codeQuality
          filters:
            branches:
              only: master
